# -*- coding: utf-8 -*-
"""Untitled7.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tY7QoCR3Xv9RUp9XXB1rRFjx2C681gEw
"""

import pandas as pd
from plotnine import *
from plotnine.data import diamonds
#conjunto de dados
df_diamonds = pd.DataFrame(diamonds)

# Ver as primeiras linhas para confirmar
df_diamonds.head()

from plotnine import (ggplot, aes, geom_point, geom_smooth,
                      scale_x_log10, scale_y_log10, labs)

# Criar o gráfico
p = (
    ggplot(df_diamonds, aes(x='carat', y='price'))

    + geom_point(alpha=0.02)
    + geom_smooth(method='lm', color='blue')
    + scale_x_log10()
    + scale_y_log10()
    + labs(
        title="Relação entre Preço e Peso (Carat) dos Diamantes",
        x="Peso (Carat)",
        y="Preço (USD)"
    )
)


p

from plotnine import (ggplot, aes, geom_point, geom_smooth,
                      scale_x_log10, scale_y_log10, labs, facet_wrap, theme)

plot2 =(
    ggplot(df_diamonds, aes(x='carat', y='price'))
    + geom_point(alpha=0.1)
    + scale_x_log10()
    + scale_y_log10()

    + geom_smooth(method='lm', color='red')

    + facet_wrap('~ cut', ncol=5)

    + labs(
        title="Relação Preço vs. Peso por Qualidade de Corte",
        x="Peso (Carat)",
        y="Preço (USD)"
    )
)

plot2

from plotnine import ggplot, aes, geom_point, geom_smooth, scale_x_log10, scale_y_log10, labs, facet_grid, theme
from plotnine.

plot3 = (
    ggplot(df_ideal, aes(x='carat', y='price', color='clarity'))
    + geom_point(alpha=0.1)
    + scale_x_log10()
    + scale_y_log10()
    + facet_grid('color ~ cut')

    + labs(
        title="Relação Preço vs. Peso (Log-Log) em Diamantes de Corte 'Ideal'",
        x="Peso (Carat) - Escala Log",
        y="Preço (USD) - Escala Log",
        color="Clareza"
    )
)

plot3